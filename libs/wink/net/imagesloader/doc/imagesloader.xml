<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//WAPFORUM//DTD XHTML Mobile 1.0//EN" "../../../utils/doc/wink_doc.dtd" >
<?xml-stylesheet type="text/xsl" href="../../../utils/doc/wink_doc.xsl"?>
<module>
  <title>Images loader</title>
  <name>wink.net.ImagesLoader</name>
  <is_graphical>0</is_graphical>
  <description>Load images and warn the user when the task is complete</description>
  <test_pages>
    <page>
      <description>Loads 10 images at startup. The images are displayed once they all have been loaded. The ImagesLoader is a singleton and only need to be instantiated once.</description>
      <url>test_imagesloader.html</url>
    </page>
  </test_pages>
  <compatibility>Iphone OS2, Iphone OS3, Iphone OS4, Android 1.1, Android 1.5, Android 2.1, Android 2.2, Android 2.3, BlackBerry 6, Bada 1.0</compatibility>
  <instanciation>
    <description>The ImagesLoader doesn't take any entry parameter. Use the 'load' method to start loading datas.</description>
    <code_sample>
datas = new Array('../img/test1.jpg', '../img/test2.jpg', '../img/test3.jpg', '../img/test4.jpg', '../img/test5.jpg', '../img/test6.jpg', '../img/test7.jpg', '../img/test8.jpg', '../img/test9.jpg');
  	
imagesLoader = new wink.net.ImagesLoader();
				
imagesLoader.load(datas);
    </code_sample>
  </instanciation>
  <components>
    <component>
      <name>wink.net.ImagesLoader</name>
      <description>load the images</description>
      <public_methods>
        <method>
          <name>load</name>
          <description>Start processing the datas. It can be a single image or a collection of images</description>
          <parameters>
            <parameter>
              <name>data</name>
              <description>the images you want to preload. It must be a string or an array of strings</description>
              <type>array/string</type>
              <is_optional>0</is_optional>
            </parameter>
          </parameters>
        </method>
      </public_methods>
      <public_properties>
        <property>
          <name>uId</name>
          <description>unique identifier of the component</description>
          <type>integer</type>
        </property>
      </public_properties>
      <events>
        <event>
          <name>/imagesloader/events/loadstart</name>
          <description>starts loading images</description>
          <return>
            <property>
              <name>items</name>
              <description>The list of data currently being processed</description>
              <type>array</type>
            </property>
          </return>
        </event>
        <event>
          <name>/imagesloader/events/load</name>
          <description>loading image</description>
          <return>
            <property>
              <name>items</name>
              <description>The list of data currently being processed</description>
              <type>array</type>
            </property>
            <property>
              <name>currentItem</name>
              <description>The index of the currently processed item in the list</description>
              <type>integer</type>
            </property>
            <property>
              <name>progress</name>
              <description>The percentage of progress (0: no image loaded; 100: all images loaded)</description>
              <type>integer</type>
            </property>
            <property>
              <name>success</name>
              <description>Did the load went well (1: OK; -1: KO)</description>
              <type>integer</type>
            </property>
          </return>
        </event>
        <event>
          <name>/imagesloader/events/loadend</name>
          <description>all the images have been loaded</description>
          <return>
            <property>
              <name>items</name>
              <description>The list of data currently being processed</description>
              <type>array</type>
            </property>
          </return>
        </event>
      </events>
    </component>
  </components>
</module>
